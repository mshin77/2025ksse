dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
) +
annotate("text",
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
label = "데이터베이스: Web of Science, 1970-2025\n총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)\nAND (공학: \"technolog*\" 등 49개 검색어)",
hjust = 0,
size = 6,
color = "#404040") +
annotate("text",
x = max(year_doc$PY) - 7,
y = -12,
label = "(Shin & McKenna, 2025) 자료 활용",
hjust = 1,
vjust = 0,
size = 4,
color = "#404040")
year_plotly <- year_plot %>% plotly::ggplotly()
year_plotly
word_network_2010_later <- word_correlation_network(
dfm_2010_later,
doc_var = NULL,
common_term_n = 3,
corr_n = 0.27,
top_node_n = 25,
node_label = 30,
nrows = 1,
height = 1000,
width = 1500,
pattern = "learn.*disab.*|single.*case|single.*subject|visual.*analy*|multi.*level|funtion.*relation|bayesian",
showlegend = FALSE,
seed = 2025
)
network_2010_later_plot <- word_network_2010_later$plot
htmlwidgets::saveWidget(network_2010_later_plot, file = "figures/network_2010_later.html", selfcontained = TRUE)
suppressPackageStartupMessages({
library(readxl)
library(readr)
library(kableExtra)
library(plotly)
library(ggplot2)
library(dplyr)
library(tidyr)
library(nlme)
library(scdhlm)
library(sjPlot)
library(quanteda)
library(TextAnalysisR)
library(spacyr)
library(stringr)
library(widyr)
library(tidygraph)
library(visNetwork)
library(RColorBrewer)
library(htmltools)
})
load("data/2025ksse_data.RData")
AB <- read_csv("data/ABAB.csv", show_col_types = FALSE)
AB$Case <- paste0("학생 ", AB$Case, sep = "")
AB.plot <-  AB %>%
ggplot(aes(Session, Outcome)) +
geom_line(data = subset(AB, AB$Phase == "Baseline1"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Baseline1.Predict"), aes(linetype='2'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention1"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention1.Predict"), aes(linetype='2'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Baseline2"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention2"), aes(linetype='1'), linewidth = 0.5) +
geom_point(size = 2.5) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15),
legend.position ="top",
panel.grid.major = element_line(colour = "grey95", linewidth = 0.2),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 13),
legend.title = element_text(size = 13),
legend.title.align = 0.5,
strip.text.x = element_text(color = "#3B3B3B", size = 13),
axis.text.x = element_text(size = 13, color = "#3B3B3B"),
axis.text.y = element_text(size = 13, color = "#3B3B3B"),
axis.title = element_text(face = "bold", size = 13, color = "#3B3B3B")
) +
labs(
x = "회기",
y = "바람직한 행동(%)"
) +
guides(linetype="none") +
geom_vline(aes(xintercept = 3.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
geom_vline(aes(xintercept = 8.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
geom_vline(aes(xintercept = 12.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
annotate(geom = "text", x = 2, y = 95, label = "기초선", color = "#0000FF", fontface = 'bold', Size = 5.5) +
annotate(geom = "text", x = 6, y = 95, label = "중재", color = "#0000FF", fontface = 'bold', Size = 5.5) +
annotate(geom = "text", x = 10.5, y = 95, label = "기초선", color = "#0000FF", fontface = 'bold', Size = 5.5) +
annotate(geom = "text", x = 15, y = 95, label = "중재", color = "#0000FF", fontface = 'bold', Size = 5.5) +
annotate(geom = "text", x = 6, y = 25, label = "예측하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 10.5, y = 5, label = "검증하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 15, y = 75, label = "재현하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate("rect", xmin = 3.8, xmax = 8.3, ymin = 0, ymax = 20, alpha = .2) +
annotate("rect", xmin = 8.8, xmax = 12.3, ymin = 60, ymax = 90, alpha = .2)
AB_plot <- AB.plot %>% ggplotly() %>% layout(dragmode = "select", height=400)
AB <- read_csv("data/ABAB.csv", show_col_types = FALSE)
AB$Case <- paste0("학생 ", AB$Case, sep = "")
AB.plot <-  AB %>%
ggplot(aes(Session, Outcome)) +
geom_line(data = subset(AB, AB$Phase == "Baseline1"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Baseline1.Predict"), aes(linetype='2'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention1"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention1.Predict"), aes(linetype='2'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Baseline2"), aes(linetype='1'), linewidth = 0.5) +
geom_line(data = subset(AB, AB$Phase == "Intervention2"), aes(linetype='1'), linewidth = 0.5) +
geom_point(size = 2.5) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15),
legend.position ="top",
panel.grid.major = element_line(colour = "grey95", linewidth = 0.2),
panel.grid.minor = element_blank(),
legend.text = element_text(size = 13),
legend.title = element_text(size = 13, hjust = 0.5),
strip.text.x = element_text(color = "#3B3B3B", size = 13),
axis.text.x = element_text(size = 13, color = "#3B3B3B"),
axis.text.y = element_text(size = 13, color = "#3B3B3B"),
axis.title = element_text(face = "bold", size = 13, color = "#3B3B3B")
) +
labs(
x = "회기",
y = "바람직한 행동(%)"
) +
guides(linetype="none") +
geom_vline(aes(xintercept = 3.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
geom_vline(aes(xintercept = 8.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
geom_vline(aes(xintercept = 12.5), linetype = "longdash", linewidth = 0.3, color = "grey10") +
annotate(geom = "text", x = 2, y = 95, label = "기초선", color = "#0000FF", fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 6, y = 95, label = "중재", color = "#0000FF", fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 10.5, y = 95, label = "기초선", color = "#0000FF", fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 15, y = 95, label = "중재", color = "#0000FF", fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 6, y = 25, label = "예측하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 10.5, y = 5, label = "검증하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate(geom = "text", x = 15, y = 75, label = "재현하기", color = 'red', fontface = 'bold', size = 5.5) +
annotate("rect", xmin = 3.8, xmax = 8.3, ymin = 0, ymax = 20, alpha = .2) +
annotate("rect", xmin = 8.8, xmax = 12.3, ymin = 60, ymax = 90, alpha = .2)
AB_plot <- AB.plot %>% ggplotly(height = 400) %>% layout(dragmode = "select")
save(AB_plot, df, dfm_2009_earlier, dfm_2010_later, network_2009_earlier_plot, network_2009_earlier_table, network_2010_later_plot, network_2010_later_table, year_plotly, file = "data/2025ksse_data.RData")
# Set up
load("data/2025ksse_data.RData")
suppressPackageStartupMessages({
library(readxl)
library(readr)
library(kableExtra)
library(plotly)
library(ggplot2)
library(dplyr)
library(tidyr)
library(nlme)
library(scdhlm)
library(sjPlot)
library(quanteda)
library(TextAnalysisR)
library(spacyr)
library(stringr)
library(widyr)
library(tidygraph)
library(visNetwork)
library(RColorBrewer)
library(htmltools)
})
htmltools::tags$style(HTML("
div.dataTables_info,
div.dataTables_paginate,
.dataTables_length,
.dataTables_filter {
font-size: 20px !important;
}
.dataTables_paginate ul.pagination {
flex-wrap: nowrap !important;
white-space: nowrap !important;
}
"))
year_plotly
network_2009_earlier_table
network_2010_later_table
AB_plot
save(AB_plot, df, dfm_2009_earlier, dfm_2010_later, network_2009_earlier_plot, network_2009_earlier_table, network_2010_later_plot, network_2010_later_table, year_plotly, file = "data/2025ksse_data.RData")
df <- read_excel("data/wos.xlsx")
setwd("C:/Users/shinm/Dropbox/Myself/conference/KSSE/2025/2025ksse/docs")
df <- read_excel("data/wos.xlsx")
df <- read_excel("data/wos.xlsx")
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
)
year_plotly <- year_plot %>% plotly::ggplotly() %>%
layout(
font = list(size = 14),
annotations = list(
list(
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
text = "데이터베이스: Web of Science, 1970-2025<br>총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)<br>AND (공학: \"technolog*\" 등 49개 검색어)",
showarrow = FALSE,
xanchor = "left",
yanchor = "top",
font = list(size = 14),
bgcolor = "rgba(255, 255, 255, 0.8)"
),
list(
x = max(year_doc$PY) - 7,
y = -12,
text = "(Shin & McKenna, 2025)",
showarrow = FALSE,
xanchor = "right",
yanchor = "top",
font = list(size = 12),
bgcolor = "rgba(255, 255, 255, 0.8)"
)
)
) %>%
config(responsive = TRUE)
year_plotly
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
)
year_plotly <- year_plot %>% plotly::ggplotly() %>%
layout(
font = list(size = 14),
annotations = list(
list(
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
text = "데이터베이스: Web of Science, 1970-2025<br>총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)<br>AND (공학: \"technolog*\" 등 49개 검색어)",
showarrow = FALSE,
xanchor = "left",
yanchor = "top",
font = list(size = 20),
bgcolor = "rgba(255, 255, 255, 0.8)"
),
list(
x = max(year_doc$PY) - 7,
y = -10,
text = "(Shin & McKenna, 2025)",
showarrow = FALSE,
xanchor = "right",
yanchor = "top",
font = list(size = 12),
bgcolor = "rgba(255, 255, 255, 0.8)"
)
)
) %>%
config(responsive = TRUE)
year_plotly
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
)
year_plotly <- year_plot %>% plotly::ggplotly() %>%
layout(
font = list(size = 14),
annotations = list(
list(
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
text = "데이터베이스: Web of Science, 1970-2025<br>총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)<br>AND (공학: \"technolog*\" 등 49개 검색어)",
showarrow = FALSE,
xanchor = "left",
yanchor = "top",
font = list(size = 19),
bgcolor = "rgba(255, 255, 255, 0.8)"
),
list(
x = max(year_doc$PY) - 7,
y = -10,
text = "(Shin & McKenna, 2025)",
showarrow = FALSE,
xanchor = "right",
yanchor = "top",
font = list(size = 12),
bgcolor = "rgba(255, 255, 255, 0.8)"
)
)
) %>%
config(responsive = TRUE)
year_plotly
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
)
year_plotly <- year_plot %>% plotly::ggplotly() %>%
layout(
font = list(size = 14),
annotations = list(
list(
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
text = "데이터베이스: Web of Science, 1970-2025<br>총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)<br>AND (공학: \"technolog*\" 등 49개 검색어)",
showarrow = FALSE,
xanchor = "left",
yanchor = "top",
font = list(size = 19),
bgcolor = "rgba(255, 255, 255, 0.8)"
),
list(
x = max(year_doc$PY) - 7,
y = -10,
text = "(Shin & McKenna, 2025)",
showarrow = FALSE,
xanchor = "right",
yanchor = "top",
font = list(size = 12),
bgcolor = "rgba(255, 255, 255, 0.8)"
)
)
) %>%
config(responsive = TRUE)
year_plotly
save(AB_plot, df, dfm_2009_earlier, dfm_2010_later, network_2009_earlier_plot, network_2009_earlier_table, network_2010_later_plot, network_2010_later_table, year_plotly, file = "data/2025ksse_data.RData")
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
) +
annotate("text",
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
label = "데이터베이스: Web of Science, 1970-2025\n총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)\nAND (공학: \"technolog*\" 등 49개 검색어)",
hjust = 0,
size = 5.5,
color = "#404040") +
annotate("text",
x = max(year_doc$PY) - 7,
y = -12,
label = "(Shin & McKenna, 2025)",
hjust = 1,
vjust = 0,
size = 4.5,
color = "#404040")
year_plotly <- year_plot %>% plotly::ggplotly(width = 1000, height = 550)
# Set up
load("data/2025ksse_data.RData")
suppressPackageStartupMessages({
library(readxl)
library(readr)
library(kableExtra)
library(plotly)
library(ggplot2)
library(dplyr)
library(tidyr)
library(nlme)
library(scdhlm)
library(sjPlot)
library(quanteda)
library(TextAnalysisR)
library(spacyr)
library(stringr)
library(widyr)
library(tidygraph)
library(visNetwork)
library(RColorBrewer)
library(htmltools)
})
htmltools::tags$style(HTML("
div.dataTables_info,
div.dataTables_paginate,
.dataTables_length,
.dataTables_filter {
font-size: 20px !important;
}
.dataTables_paginate ul.pagination {
flex-wrap: nowrap !important;
white-space: nowrap !important;
}
"))
# Set up
# load("data/2025ksse_data.RData")
suppressPackageStartupMessages({
library(readxl)
library(readr)
library(kableExtra)
library(plotly)
library(ggplot2)
library(dplyr)
library(tidyr)
library(nlme)
library(scdhlm)
library(sjPlot)
library(quanteda)
library(TextAnalysisR)
library(spacyr)
library(stringr)
library(widyr)
library(tidygraph)
library(visNetwork)
library(RColorBrewer)
library(htmltools)
})
htmltools::tags$style(HTML("
div.dataTables_info,
div.dataTables_paginate,
.dataTables_length,
.dataTables_filter {
font-size: 20px !important;
}
.dataTables_paginate ul.pagination {
flex-wrap: nowrap !important;
white-space: nowrap !important;
}
"))
df <- read_excel("data/wos.xlsx")
year_doc <- df %>%
dplyr::select(PY, UT) %>%
group_by(PY) %>%
dplyr::summarize(publication_number = n())
year_plot <- year_doc %>%
ggplot() +
geom_col(aes(PY, publication_number), fill = "#B3B3B3") +
labs(x = "", y = "논문 수") +
theme_classic(base_size = 14) +
theme(
axis.line           = element_line(color = "#404040", linewidth =  0.2),
axis.title.y.left   = element_text(size = 16, color = "#404040", margin = margin(r = 10)),
axis.text.y.left    = element_text(size = 16, margin = margin(l = 7)),
axis.text.x         = element_text(size = 14)
) +
annotate("text",
x = min(year_doc$PY) + (max(year_doc$PY) - min(year_doc$PY))/2.5,
y = max(year_doc$publication_number) * 0.9,
label = "데이터베이스: Web of Science, 1970-2025\n총 3,508편 (단일대상: \"single* case* design\" 등 18개 검색어)\nAND (공학: \"technolog*\" 등 49개 검색어)",
hjust = 0,
size = 5.5,
color = "#404040") +
annotate("text",
x = max(year_doc$PY) - 7,
y = -12,
label = "(Shin & McKenna, 2025)",
hjust = 1,
vjust = 0,
size = 4.5,
color = "#404040")
year_plotly <- year_plot %>% plotly::ggplotly(width = 1000, height = 550)
year_plotly
load("C:/Users/shinm/Dropbox/Myself/conference/KSSE/2025/2025ksse/docs/data/2025ksse_data.RData")
